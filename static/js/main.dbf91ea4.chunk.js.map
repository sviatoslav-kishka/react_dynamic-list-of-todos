{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","onCLick","title","onChange","selectedByStatus","onChangeByStatus","className","value","placeholder","map","todo","key","id","classNames","completed","type","readOnly","onClick","userId","API_URL","CurrentUser","state","user","this","loadData","prevProps","props","a","fetch","then","response","json","result","data","setState","name","email","phone","React","Component","App","selectedUserId","selectedTitle","changeSelectedUser","clearUserSelection","selectByTitle","event","target","selectByStatus","filterTodosCallback","arr","filter","item","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbf91ea4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  onCLick,\n  title,\n  onChange,\n  selectedByStatus,\n  onChangeByStatus,\n}) => {\n  const unchecked = 'TodoList__item--unchecked';\n  const checked = 'TodoList__item--checked';\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos</h2>\n      <p>Filter Todos by title:</p>\n      <input\n        className=\"input\"\n        value={title}\n        onChange={onChange}\n        placeholder=\"Type Search Word\"\n      />\n      <p>Filter Todos by status:</p>\n      <select\n        value={selectedByStatus}\n        onChange={onChangeByStatus}\n      >\n        <option value=\"all\">\n          all\n        </option>\n        <option value=\"active\">\n          active\n        </option>\n        <option value=\"completed\">\n          completed\n        </option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames('TodoList__item', {\n                [checked]: todo.completed === true,\n                [unchecked]: todo.completed === false,\n              })}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"TodoList__user-button\n                TodoList__user-button--selected button\"\n                type=\"button\"\n                onClick={() => onCLick(todo.userId)}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string.isRequired,\n      completed: propTypes.bool.isRequired,\n      userId: propTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onCLick: propTypes.func.isRequired,\n  title: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n  selectedByStatus: propTypes.string.isRequired,\n  onChangeByStatus: propTypes.func.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUserData(userId) {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport propTypes from 'prop-types';\n\nimport { getUserData } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUserData(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, onClick } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${userId}`}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button button--user\"\n          onClick={onClick}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: propTypes.number.isRequired,\n  onClick: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    selectedTitle: '',\n    selectedByStatus: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  changeSelectedUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUserSelection = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  selectByTitle = (event) => {\n    this.setState({\n      selectedTitle: event.target.value,\n    });\n  }\n\n  selectByStatus = (event) => {\n    this.setState({\n      selectedByStatus: event.target.value,\n    });\n  }\n\n  filterTodosCallback = arr => arr.filter((item) => {\n    if (this.state.selectedByStatus === 'active') {\n      return item.completed === false;\n    }\n\n    if (this.state.selectedByStatus === 'completed') {\n      return item.completed === true;\n    }\n\n    return item;\n  }).filter(item => item.title !== null\n      && item.title.includes(this.state.selectedTitle))\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      selectedTitle,\n      selectedByStatus,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={this.filterTodosCallback(todos)}\n            onCLick={this.changeSelectedUser}\n            title={selectedTitle}\n            onChange={this.selectByTitle}\n            selectedByStatus={selectedByStatus}\n            onChangeByStatus={this.selectByStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClick={this.clearUserSelection}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}